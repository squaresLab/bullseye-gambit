import sys
import gambit
import main
import parser


def strip_ind_string(ind_string):
    return ind_string.split("Tree 0:")[1].strip("\n")


if __name__ == '__main__':
    ind_string = sys.argv[1]

    # print(ind_string)

    stripped_ind_string = strip_ind_string(ind_string)

    # print(stripped_ind_string)

    scenario_string = sys.argv[2]

    game_tree = main.build_game_tree_br(stripped_ind_string, scenario_string)

    solver = gambit.nash.ExternalLPSolver()
    s = solver.solve(game_tree)

    # 2 timestep ne util
    # actuall solve for the ne instead
    # neutil = 1.78771943969

    game_tree_free = main.build_game_tree(None, False, parser.scenarioStringToList(scenario_string))

    ne_s = solver.solve(game_tree_free)
    neutil = ne_s[0].payoff(game_tree_free.players[1])

    # print (s[0].payoff(g.players[0]))
    print (neutil - s[0].payoff(game_tree.players[1]))
